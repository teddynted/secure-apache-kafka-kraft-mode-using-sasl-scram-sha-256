name: 'Deploy'
on:
  push:
    branches: ["main"]

permissions:
  id-token: write
  contents: write

jobs:
  Deploy:
    name: 'Deploy'
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      SASL_SCRAM_USERNAME: ${{ secrets.SASL_SCRAM_USERNAME }}
      SASL_SCRAM_PASSWORD: ${{ secrets.SASL_SCRAM_PASSWORD }}
      KEY_PAIR_BUCKET_NAME: ${{ secrets.KEY_PAIR_BUCKET_NAME }}
      KEY_PAIR_NAME: ${{ secrets.KEY_PAIR_NAME }}
      STATE: ${{ secrets.STATE }}
      COUNTRY: ${{ secrets.COUNTRY }}
      ORGANIZATION_UNIT: ${{ secrets.ORGANIZATION_UNIT }}
      CITY: ${{ secrets.CITY }}
      VPC_ID: ${{ secrets.VPC_ID }}
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
    
    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Install the latest serverless
      run: npm i serverless -g

    - name: Create Key Pair
      run: |
        chmod +x ./create-key-pair.sh
        ./create-key-pair.sh
      env:
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        KEY_PAIR_BUCKET_NAME: ${{ secrets.KEY_PAIR_BUCKET_NAME }}
        KEY_PAIR_NAME: ${{ secrets.KEY_PAIR_NAME }}
    
    - name: Serverless deploy
      uses: serverless/github-action@v3.2
      with:
        args: deploy --verbose

    - name: Update EC2 Launch Template Version
      run: |
        chmod +x ./modify-launch-template-version.sh
        ./modify-launch-template-version.sh
      env:
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
    
    - name: Connect Kafka Cluster And Run Commands
      run: |
        chmod +x ./ec2.sh
        ./ec2.sh
      env:
        SASL_SCRAM_PASSWORD: ${{ secrets.SASL_SCRAM_PASSWORD }}
        SASL_SCRAM_USERNAME: ${{ secrets.SASL_SCRAM_USERNAME }}
        REGION: ${{ secrets.AWS_REGION }}
