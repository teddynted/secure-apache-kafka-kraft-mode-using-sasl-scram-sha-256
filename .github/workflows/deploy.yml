name: 'Deploy'
on:
  push:
    branches: ["main"]

permissions:
  id-token: write
  contents: write

jobs:
  Deploy:
    name: 'Deploy'
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      SASL_SCRAM_USERNAME: ${{ secrets.SASL_SCRAM_USERNAME }}
      SASL_SCRAM_PASSWORD: ${{ secrets.SASL_SCRAM_PASSWORD }}
      KEY_PAIR_BUCKET_NAME: ${{ secrets.KEY_PAIR_BUCKET_NAME }}
      KEY_PAIR_NAME: ${{ secrets.KEY_PAIR_NAME }}
      COUNTRY: ${{ secrets.COUNTRY }}
      ORGANIZATION_UNIT: ${{ secrets.ORGANIZATION_UNIT }}
      CITY: ${{ secrets.CITY }}
      KAFKA_REQUEST_TOPIC: ${{ secrets.KAFKA_REQUEST_TOPIC }}
      KAFKA_BOOTSTRAP_SERVER: ${{ secrets.KAFKA_BOOTSTRAP_SERVER }}
      KAFKA_BOOTSTRAP_SERVER_TWO: ${{ secrets.KAFKA_BOOTSTRAP_SERVER_TWO }}
      KAFKA_BOOTSTRAP_SERVER_THREE: ${{ secrets.KAFKA_BOOTSTRAP_SERVER_THREE }}
      KAFKA_REQUEST_CONSUMER_GROUP_ID: ${{ secrets.KAFKA_REQUEST_CONSUMER_GROUP_ID }}
      NODE_ONE_TOPIC: ${{ secrets.NODE_ONE_TOPIC }}
      NODE_TWO_TOPIC: ${{ secrets.NODE_TWO_TOPIC }}
      NODE_THREE_TOPIC: ${{ secrets.NODE_THREE_TOPIC }}
      OFFSETS_TOPIC_REPLICATION_FACTOR: ${{ secrets.OFFSETS_TOPIC_REPLICATION_FACTOR }}
      DEFAULT_REPLICATION_FACTOR: ${{ secrets.DEFAULT_REPLICATION_FACTOR }}
      STAGE: ${{ secrets.STAGE }}
      PROMETHEUS_VERSION: ${{ secrets.PROMETHEUS_VERSION }}

    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}

    - name: Setup Go environment
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}
        cache: true
    
    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Install the latest serverless
      run: npm i serverless -g
    
    - uses: evantorrie/mott-the-tidier@v1-beta
      with:
        gomods: |
          **/go.mod
          go.mod
          -tools/go.mod
  
    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Auto-fix go.sum discrepancies
      
    # This step builds the Go application and creates a zip file containing the binary
    # It is important to note that the binary must be named "bootstrap"
    - name: Build Go application
      run: |    
        rm -rf build && make build && make zip

    - name: Create Key Pair
      run: |
        chmod +x ./shell-scripts/create-key-pair.sh
        ./shell-scripts/create-key-pair.sh
      env:
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        KEY_PAIR_BUCKET_NAME: ${{ secrets.KEY_PAIR_BUCKET_NAME }}
        KEY_PAIR_NAME: ${{ secrets.KEY_PAIR_NAME }}

    - name: Serverless deploy
      uses: serverless/github-action@v3.2
      with:
        args: deploy --verbose

    # - name: Connect to Prometheus Instance
    #   run: |
    #     chmod +x ./shell-scripts/prothemeus/ec2.sh
    #     ./shell-scripts/prothemeus/ec2.sh
    #   env:
    #     SASL_SCRAM_PASSWORD: ${{ secrets.SASL_SCRAM_PASSWORD }}
    #     SASL_SCRAM_USERNAME: ${{ secrets.SASL_SCRAM_USERNAME }}
    #     REGION: ${{ secrets.AWS_REGION }}
    #     KAFKA_BOOTSTRAP_SERVER: ${{ secrets.KAFKA_BOOTSTRAP_SERVER }}
    #     KAFKA_BOOTSTRAP_SERVER_TWO: ${{ env.KAFKA_BOOTSTRAP_SERVER_TWO }}
    #     KAFKA_BOOTSTRAP_SERVER_THREE: ${{ env.KAFKA_BOOTSTRAP_SERVER_THREE }}
    
    - name: Connect to Kafka Node 1
      run: |
        chmod +x ./shell-scripts/node-1/ec2.sh
        ./shell-scripts/node-1/ec2.sh
      env:
        SASL_SCRAM_PASSWORD: ${{ secrets.SASL_SCRAM_PASSWORD }}
        SASL_SCRAM_USERNAME: ${{ secrets.SASL_SCRAM_USERNAME }}
        REGION: ${{ secrets.AWS_REGION }}
        NODE_ONE_TOPIC: ${{ secrets.NODE_ONE_TOPIC }}
        OFFSETS_TOPIC_REPLICATION_FACTOR: ${{ env.OFFSETS_TOPIC_REPLICATION_FACTOR }}
        DEFAULT_REPLICATION_FACTOR: ${{ env.DEFAULT_REPLICATION_FACTOR }}
        CLUSTER_ID: ${{ env.CLUSTER_ID }}
        NODE_ID: 1

    - name: Connect to Kafka Node 2
      run: |
        chmod +x ./shell-scripts/node-2/ec2.sh
        ./shell-scripts/node-2/ec2.sh
      env:
        SASL_SCRAM_PASSWORD: ${{ secrets.SASL_SCRAM_PASSWORD }}
        SASL_SCRAM_USERNAME: ${{ secrets.SASL_SCRAM_USERNAME }}
        REGION: ${{ secrets.AWS_REGION }}
        NODE_TWO_TOPIC: ${{ secrets.NODE_TWO_TOPIC }}
        OFFSETS_TOPIC_REPLICATION_FACTOR: ${{ env.OFFSETS_TOPIC_REPLICATION_FACTOR }}
        DEFAULT_REPLICATION_FACTOR: ${{ env.DEFAULT_REPLICATION_FACTOR }}
        CLUSTER_ID: ${{ env.CLUSTER_ID }}
        NODE_ID: 2
  
    - name: Connect to Kafka Node 3
      run: |
        chmod +x ./shell-scripts/node-3/ec2.sh
        ./shell-scripts/node-3/ec2.sh
      env:
        SASL_SCRAM_PASSWORD: ${{ secrets.SASL_SCRAM_PASSWORD }}
        SASL_SCRAM_USERNAME: ${{ secrets.SASL_SCRAM_USERNAME }}
        REGION: ${{ secrets.AWS_REGION }}
        NODE_THREE_TOPIC: ${{ secrets.NODE_THREE_TOPIC }}
        OFFSETS_TOPIC_REPLICATION_FACTOR: ${{ env.OFFSETS_TOPIC_REPLICATION_FACTOR }}
        DEFAULT_REPLICATION_FACTOR: ${{ env.DEFAULT_REPLICATION_FACTOR }}
        CLUSTER_ID: ${{ env.CLUSTER_ID }}
        NODE_ID: 3
