Type: "AWS::EC2::Instance"
Properties:
  AvailabilityZone: { "Fn::Select": [0,{ "Fn::GetAZs": "" }] }
  InstanceType: { 'Ref': 'InstanceType' }
  ImageId: { 'Ref': 'LatestAmiId' }
  SubnetId: { "Ref": "ApacheKafkaPrivateSubnet1" }
  IamInstanceProfile: { 'Ref': 'Ec2IAMProfile' }
  NetworkInterfaces: 
    - AssociatePublicIpAddress: "true"
      DeviceIndex: "0"
  SecurityGroupIds:
    - { 'Fn::GetAtt': ['KafkaNodeSecurityGroup', 'GroupId'] }
  KeyName: !Join [ "-", [ {"Ref": "KeyPairName"}, { 'Ref': 'AWS::Region' } ] ]
  Tags:
    - Key: Name
      Value: Apache Kafka Kraft Instance 2
  UserData:
    Fn::Base64: !Sub 
    - |
      #!/bin/bash -xe
      exec > >(tee /var/log/user-data.log) 2>&1
      
      # Download and execute with error handling
      if ! curl -fSL https://raw.githubusercontent.com/teddynted/secure-apache-kafka-kraft-mode-using-sasl-scram-sha-256/refs/heads/main/shell-scripts/user-data.sh -o /tmp/user-data.sh; then
        echo "ERROR: Failed to download script"
        exit 1
      fi
      
      chmod +x /tmp/user-data.sh
      if ! /tmp/user-data.sh ${username} ${password} ${state} ${country} ${unit} ${city} ${nodeId} $offsets_topic_replication_factor $default_replication_factor; then
        echo "ERROR: Script execution failed"
        exit 1
      fi
    - username: { "Fn::Sub": [ "${username}", { "username": "${env:SASL_SCRAM_USERNAME}" } ] }
      password: { "Fn::Sub": [ "${password}", { "password": "${env:SASL_SCRAM_PASSWORD}" } ] }
      state: { "Fn::Sub": [ "${state}", { "state": "${env:STATE}" } ] }
      country: { "Fn::Sub": [ "${country}", { "country": "${env:COUNTRY}" } ] }
      unit: { "Fn::Sub": [ "${unit}", { "unit": "${env:ORGANIZATION_UNIT}" } ] }
      city: { "Fn::Sub": [ "${city}", { "city": "${env:CITY}" } ] }
      nodeId: { "Fn::Sub": [ "${nodeId}", { "nodeId": 2 } ] }
      offsets_topic_replication_factor: { "Fn::Sub": [ "${offsets_topic_replication_factor}", { "offsets_topic_replication_factor": "${env:OFFSETS_TOPIC_REPLICATION_FACTOR}" } ] }
      default_replication_factor: { "Fn::Sub": [ "${default_replication_factor}", { "default_replication_factor": "${env:DEFAULT_REPLICATION_FACTOR}" } ] }