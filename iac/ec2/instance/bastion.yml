Type: AWS::EC2::Instance
DependsOn: [NodeOne, NodeTwo, NodeThree]
Properties:
  InstanceType: t2.micro
  KeyName: !Join [ "-", [ {"Ref": "KeyPairName"}, { 'Ref': 'AWS::Region' } ] ]
  IamInstanceProfile: { "Ref": "BastionInstanceProfile" }
  ImageId: { "Ref": "LatestAmiId" }
  NetworkInterfaces: 
    - AssociatePublicIpAddress: "true"
      DeviceIndex: "0"
      GroupSet: 
        - {"Ref": "BastionSecurityGroup"}
      SubnetId: {"Ref": "KafkaPublicSubnet"}
  Tags:
    - Key: Name
      Value: JumpServer
  UserData:
    Fn::Base64: !Sub |
      #!/bin/bash
      sudo yum update -y
      sudo yum install -y aws-cli jq

      sudo yum install -y amazon-ssm-agent
      systemctl enable amazon-ssm-agent
      systemctl start amazon-ssm-agent

      COMMAND=$(aws ssm send-command --instance-ids $(aws ec2 describe-instances --filters "Name=tag:Name,Values=*Apache*,*Kafka*" "Name=instance-state-name,Values=running" --query "Reservations[].Instances[].InstanceId" --output text) \
        --document-name "AWS-RunShellScript" \
        --parameters 'commands=[
          "sudo systemctl status kafka",
          "sudo systemctl start kafka"
          ]' \
        --output-s3-bucket-name "kafka-certs-bucket-develop" \
        --output-s3-key-prefix "kafka-debugs")

      COMMAND_ID=$(echo "$COMMAND" | jq -r .Command.CommandId)
      echo "COMMAND_ID: $COMMAND_ID"
      
      aws ssm list-command-invocations --command-id $COMMAND_ID --details

