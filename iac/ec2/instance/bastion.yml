Type: AWS::EC2::Instance
DependsOn: [NodeOne1, NodeTwo1, NodeThree1]
Properties:
  InstanceType: t2.micro
  KeyName: !Join [ "-", [ {"Ref": "KeyPairName"}, { 'Ref': 'AWS::Region' } ] ]
  ImageId: { "Ref": "LatestAmiId" }
  NetworkInterfaces: 
    - AssociatePublicIpAddress: "true"
      DeviceIndex: "0"
      GroupSet: 
        - {"Ref": "BastionSecurityGroup"}
      SubnetId: {"Ref": "KafkaPublicSubnet"}
  Tags:
    - Key: Name
      Value: JumpServer
  UserData:
    Fn::Base64: !Sub |
      #!/bin/bash
      sudo yum update -y
      sudo yum install -y aws-cli

      sudo dnf install -y python3 python3-pip

      # Install pssh
      pip3 install --user pssh
      
      # Add local bin to PATH for ec2-user
      sudo echo 'export PATH=$HOME/.local/bin:$PATH' >> /home/ec2-user/.bashrc
      sudo chown ec2-user:ec2-user /home/ec2-user/.bashrc


      pssh --version

      OUTPUT_FILE="/tmp/kafka_hosts.txt"

      private_ips=$(aws ec2 describe-instances --region "eu-west-1" --filters "Name=tag:Name,Values=*Apache*,*Kafka*" --query "Reservations[*].Instances[*].[PrivateDnsName]" --output text)
      
      echo $private_ips
      
      for ip in $private_ips; do
        echo "$ip" >> $OUTPUT_FILE
      done
      
      pssh -h $OUTPUT_FILE -i "sudo systemctl start kafka"
      pssh -h $OUTPUT_FILE -i "sudo systemctl status kafka"
      pssh -h $OUTPUT_FILE -i "sudo /opt/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list --command-config /opt/kafka/config/kraft/client.properties"
      pssh -h $OUTPUT_FILE -i "/opt/kafka/bin/kafka-metadata-quorum.sh --bootstrap-server localhost:9092 describe --status"
      #pssh -h kafka-hosts.txt -v -i "command"
