Type: AWS::EC2::Instance
DependsOn: [NodeOne5, NodeTwo5, NodeThree5]
Properties:
  InstanceType: t2.micro
  KeyName: !Join [ "-", [ {"Ref": "KeyPairName"}, { 'Ref': 'AWS::Region' } ] ]
  IamInstanceProfile: { "Ref": "BastionInstanceProfile" }
  ImageId: { "Ref": "LatestAmiId" }
  NetworkInterfaces: 
    - AssociatePublicIpAddress: "true"
      DeviceIndex: "0"
      GroupSet: 
        - {"Ref": "BastionSecurityGroup"}
      SubnetId: {"Ref": "KafkaPublicSubnet"}
  Tags:
    - Key: Name
      Value: JumpServer
  UserData:
    Fn::Base64: !Sub |
      #!/bin/bash
      sudo yum update -y
      sudo yum install -y aws-cli jq

      sudo yum install -y amazon-ssm-agent
      systemctl enable amazon-ssm-agent
      systemctl start amazon-ssm-agent

      BUCKET="kafka-certs-bucket-develop"
      PREFIX="kafka-debugs"

      REGION=$(aws ec2 describe-availability-zones --output text --query 'AvailabilityZones[0].[RegionName]')

      # Delete all objects under the prefix
      aws s3 rm s3://$BUCKET/$PREFIX --recursive

      INSTANCE_IDS=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=*Apache*,*Kafka*" "Name=instance-state-name,Values=running" --query "Reservations[].Instances[].InstanceId" --output text)

      COMMAND=$(aws ssm send-command --instance-ids $INSTANCE_IDS \
        --document-name "AWS-RunShellScript" \
        --parameters 'commands=[
          "echo === STARTING DEBUG === >> /tmp/kafka-debug.log",
          "sudo systemctl daemon-reload >> /tmp/kafka-debug.log",
          "sudo systemctl enable kafka >> /tmp/kafka-debug.log",
          "sudo systemctl start kafka >> /tmp/kafka-debug.log",
          "sudo systemctl status kafka >> /tmp/kafka-debug.log",
          "sudo journalctl -u kafka -f >> /tmp/kafka-debug.log",
          "sudo journalctl -u kafka -n 100 --no-pager >> /tmp/kafka-debug.log",
          "sudo journalctl -u kafka -p err..alert >> /tmp/kafka-debug.log"
          ]' \
        --output-s3-bucket-name "$BUCKET" \
        --output-s3-key-prefix "$PREFIX")

      COMMAND_ID=$(echo "$COMMAND" | jq -r .Command.CommandId)
      echo "COMMAND_ID: $COMMAND_ID"
      
      # aws ssm list-command-invocations --command-id $COMMAND_ID --details
      sleep 5
      # Retrieve output per instance
      for INSTANCE in $INSTANCE_IDS; do
        aws ssm get-command-invocation \
          --command-id $COMMAND_ID \
          --instance-id $INSTANCE \
          --region $REGION \
          --output text \
          --query "StandardOutputContent" > kafka-debug-$INSTANCE.log
      done