Type: AWS::EC2::Instance
DependsOn: [NodeOne5, NodeTwo5, NodeThree5]
Properties:
  InstanceType: t2.micro
  KeyName: !Join [ "-", [ {"Ref": "KeyPairName"}, { 'Ref': 'AWS::Region' } ] ]
  IamInstanceProfile: { "Ref": "BastionInstanceProfile" }
  ImageId: { "Ref": "LatestAmiId" }
  NetworkInterfaces: 
    - AssociatePublicIpAddress: "true"
      DeviceIndex: "0"
      GroupSet: 
        - {"Ref": "BastionSecurityGroup"}
      SubnetId: {"Ref": "KafkaPublicSubnet"}
  Tags:
    - Key: Name
      Value: JumpServer
  UserData:
    Fn::Base64: !Sub |
      #!/bin/bash
      sudo yum update -y
      sudo yum install -y aws-cli

      sudo yum install -y amazon-ssm-agent
      systemctl enable amazon-ssm-agent
      systemctl start amazon-ssm-agent

      command_id=$(aws ssm send-command \
        --instance-ids $(aws ec2 describe-instances \
        --filters "Name=tag:Name,Values=*Apache*,*Kafka*" "Name=instance-state-name,Values=running" \
        --query "Reservations[].Instances[].InstanceId" --output text) \
        --document-name "AWS-RunShellScript" \
        --parameters 'commands=[
          "sudo chmod +x /opt/kafka/scripts/kafka-format.sh",
          "sudo chown ec2-user /opt/kafka/scripts/kafka-format.sh",
          "sudo /opt/kafka/scripts/kafka-format.sh", 
          "sudo /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/kraft/server.properties"
          ]') \
        --output-s3-bucket-name "kafka-certs-bucket-develop" \
        --output-s3-key-prefix "kafka-debugs"
      echo $command_id
      aws ssm list-command-invocations --command-id $command_id --details
